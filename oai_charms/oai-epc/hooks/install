#!/bin/bash
################################################################################
#
# Copyright (c) 2016, EURECOM (www.eurecom.fr)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of the FreeBSD Project.
#
################################################################################
# file install
# brief install the oai-epc from the openairinterface git repository
# author  navid.nikaein@eurecom.fr and A. B. Molini

set -eux

export DEBIAN_FRONTEND=noninteractive
source $CHARM_DIR/utils/common
set_env_paths

open-port 2152/udp

branch=`config-get branch`
revision=`config-get revision`
echo "$branch" > $CHARM_DIR/.branch
echo "$revision" > $CHARM_DIR/.revision

status-set maintenance "Fetching and installing Openair4G"

gitAlreadyInstalled=$(dpkg --get-selections git 2>/dev/null | grep -c 'install') || true
if [ ! $gitAlreadyInstalled -eq 1 ]; then
   # If git is NOT installed
   apt-get install -y  --force-yes  git
   # Ensure necessary git dependency exist.
fi
atAlreadyInstalled=$(dpkg --get-selections at 2>/dev/null | grep -c 'install') || true
if [ ! $atAlreadyInstalled -eq 1 ]; then
   # If at command is NOT installed
   apt-get install -y --force-yes at
   # Ensure at command exists to let juju reschedule this hook after rebooting the machine.
fi
virtwhatAlreadyInstalled=$(dpkg --get-selections virt-what 2>/dev/null | grep -c 'install') || true
if [ ! $virtwhatAlreadyInstalled -eq 1 ]; then
   apt-get install -y --force-yes virt-what
fi
machine_type=`virt-what`

juju-log "Fetching and installing openair5G EPC"
status-set maintenance "Fetching and installing Openair5G EPC"

echo -n | openssl s_client -showcerts -connect gitlab.eurecom.fr:443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' >> /etc/ssl/certs/ca-certificates.crt
#everytime refresh the installation
if [ -d "$openair_path"  ]; then
   #juju-log "Removing the installation directory"
   #rm -rf $openair_path
    juju-log "Updating the installation directory"
    cd $openair_path
    git reset --hard HEAD
    git checkout $branch
    git pull
    shopt -s nocasematch
    if [[ "$revision" != "HEAD" ]]; then
	git checkout $revision
    fi
    cd -
else
   #Save the current hosts file
   cp -f /etc/hosts /home
   git clone https://gitlab.eurecom.fr/oai/openair-cn.git $openair_path
   cd $openair_path
   git checkout $branch
   shopt -s nocasematch
   if [[ "$revision" != "HEAD" ]]; then
       git checkout $revision
   fi
   cd -
fi

#We don't need phpmyadmin because the database will be somewhere else.
#sed -i "s/phpmyadmin/#phpmyadmin/" $tools_path/build_helper
sed -i "/phpmyadmin/d" $tools_path/build_helper

status-set maintenance "Installing some dependencies"

#mysql-server needed for installing resolveip tool, we don't actually use mysql-server
echo "mysql-server mysql-server/root_password password linux" | debconf-set-selections
echo "mysql-server mysql-server/root_password_again password linux" | debconf-set-selections
sudo apt-get install -y mysql-server

juju-log "Check the kernel and update if required"


if [ "$machine_type"  == "lxc" -o "$machine_type" == "docker" ]; then
    juju-log "Can't install the required kernel in $machine_type env. Either deploy oai-epc with kvm or make sure that the host has the required version and kernel modules".
    status-set error "Can't install the required kernel 3.19"
else
    if  [ "$machine_type"  == "" ] ; then
	juju-log "Please install kerenel version 3.19 on the host".
    else
	check_current_kernel
	if [[ $REQUIRED_KERNEL_IS_INSTALLED == false ]]; then
	    if [ "$(cat $CHARM_DIR/.reboot)" != "reboot" ]; then
		juju-log "installing the required kernel and reboot"
		status-set maintenance "installing the required kernel and rebooting"
		install_required_kernel
  		echo "reboot" > $CHARM_DIR/.reboot
		juju-reboot --now
	    else
		juju-log "Can't install the required kernel."
		status-set error "Can't install the required kernel"
	    fi
	fi
    fi
fi

juju-log "Build process and package installation"
sed -i -r "s/(check_kernel_release_and_install_xtables_addons_oai[^()]+)/#\1/" $tools_path/build_helper

# modify by subond
#$build_run_scripts/build_epc -c -i -f >& /srv/.build_epc_install.log
$build_run_scripts/build_mme -c -i -f >& /srv/.build_mme_install.log
$build_run_scripts/build_spgw -c -i -f >& /srv/.build_spgw_install.log
# end
#$build_run_scripts/build_epc -t -f

# modify by subond
# #install_xtables_addons_oai
source $tools_path/build_helper
#install_xtables_addons_oai 1


if [ ! -f $CHARM_DIR/.tac_list ]; then
   touch $CHARM_DIR/.tac_list
fi

#add the mme-gw init
juju-log "Add mme-gw init script"
#cp $CHARM_DIR/files/mme_gw /etc/init/mme_gw.conf
cp $CHARM_DIR/files/epc_mme /etc/init/epc_mme.conf
cp $CHARM_DIR/files/epc_spgw /etc/init/epc_spgw.conf

realm=`config-get realm`
echo "$realm" > $CHARM_DIR/.realm
#define fqdn for MME
if [ -z "$(grep -o "`hostname`.$realm" /etc/hosts)" ]; then
   echo 127.0.0.1 localhost > /etc/hosts
   echo 127.0.1.1 `hostname`.$realm `hostname` mme >> /etc/hosts
fi

machine_realm=`hostname`.$realm
#In the epc.conf there will be the local hostname as HSS_HOSTNAME, basically
#like HSS was on the same machine of EPC. It is the default if you don't
#give any hss name in input to build_epc script.
#So we can't start the final executable because we would get an error
#so we need to wait for a relation.
status-set maintenance "Building EPC"

# modify by subond
#$build_run_scripts/build_epc -c -H "unknown.$realm" >& /srv/.build_epc_compile.log
$build_run_scripts/build_mme -c >& /srv/.build_mme_compile.log
status_mme=$?
if [ "$status_mme" != 0 ]; then
    $build_run_scripts/build_mme -c -i -f
  #  $build_run_scripts/build_epc -t -f
    $build_run_scripts/build_mme -c
fi
$build_run_scripts/build_spgw -c >& /srv/.build_spgw_compile.log
status_spgw=$?
if [ "$status_spgw" != 0 ]; then
    $build_run_scripts/build_epc -c -i -f
  #  $build_run_scripts/build_epc -t -f
    $build_run_scripts/build_spgw -c
fi
# end
# modify by subond
# /usr/local/bin/mmg_gw is created by build_epc
# but /usr/local/mme(build_mme) and /usr/local/spgw(build_spgw) are created by new version epc
#if [ ! -f /usr/local/bin/mme_gw ] ; then
# status-set error "mme_gw compilation failed! Try increasing the size of Virtual Memory if only 512M and retry!"
# exit  1
#fi

if [ ! -f /usr/local/bin/mme ] ; then
 status-set error "mme compilation failed! Try increasing the size of Virtual Memory if only 512M and retry!"
 exit  1
fi

if [ ! -f /usr/local/bin/spgw ] ; then
 status-set error "spgw compilation failed! Try increasing the size of Virtual Memory if only 512M and retry!"
 exit  1
fi

# end
status-set blocked "Waiting for active connection with HSS to actually run EPC...add hss relation"
